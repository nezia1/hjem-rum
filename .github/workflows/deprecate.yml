name: Deprecate
on:
  push:
env:
  CUTOFF_DATE: P14D
  PR_NEEDED: "false"
jobs:
  get-diff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate new deprecations
        run: nix run .#hjr-deprecate -- -d "$CUTOFF_DATE" modules/collection/deprecations.nix > new-deprecations

      - name: Upload new deprecations
        uses: actions/upload-artifact@v4
        with:
          name: new-deprecations
          path: new-deprecations
          overwrite: true

  is-pr-needed:
    runs-on: ubuntu-latest
    needs: get-diff
    outputs:
      needed: ${{ steps.check.outputs.needed }}
    steps:
      - name: Download new deprecations
        uses: actions/download-artifact@v4
        with:
          name: new-deprecations

      - name: Check if creating a PR is needed
        id: check
        run: echo "needed=$(test -s new-deprecations && echo 'true' || echo 'false')" >> "$GITHUB_OUTPUT"

  create-pr:
    runs-on: ubuntu-latest
    needs: is-pr-needed
    if: ${{ needs.is-pr-needed.outputs.needed == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download new deprecations
        uses: actions/download-artifact@v4
        with:
          name: new-deprecations

      - name: Replace deprecations with new file
        run: cp new-deprecations modules/collection/deprecations.nix

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Format Nix code
        run: nix fmt modules/collection/deprecations.nix

      - name: Create Pull Request
        uses: actions/create-pull-request@v7
        with:
          add-paths: |
            modules/collection/deprecations.nix
          commit-message: "modules/deprecations: update deprecations for cutoff date ${{ env.CUTOFF_DATE }}"
          title: "Update deprecations for cutoff date ${{ env.CUTOFF_DATE }}"
          body: |
            This PR updates the deprecations file with new content generated for cutoff date `${{ env.CUTOFF_DATE }}`.

            ## Changes
            - Updated `modules/collection/deprecations.nix` with new deprecations
            - Generated automatically by the deprecation workflow

            Auto-generated by GitHub Actions on push to ${{ github.ref_name }}.
          branch: update-deprecations-${{ github.run_number }}
          branch-suffix: timestamp
          delete-branch: true
          labels: |
            automated
            deprecations
