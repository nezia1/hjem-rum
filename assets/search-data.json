[{"id":"0","title":"Contributing","content":"Contributing Hjem Rum (or HJR) is always in need of contributions as a module collection. As  programs are developed, modules will need to be added, changed, removed, etc.,  meaning that the development of HJR is, in essence, unending. Contributing is also a great way to learn the Nix module system and even  function writing. Don't be afraid to experiment and try learning something new. If you are familiar with contributing to open source software, you can safely  skip ahead to  Core Principles . Otherwise, read the following  section to learn how to fork a repo and open a PR. Getting Started Commit format Core Principles Guidelines Where to put a new module Aliases Writing Options Conditional Config Extending Lib Docs Tests Reviewing a PR Getting Started To begin contributing to HJR, you will first need to create a fork off of the  main branch in order to make changes. For info on how to do this, we recommend  GitHub's own  documentation . Once you have your own fork, it is recommend that you create a branch for the  changes or additions you seek to make, to make it easier to set up multiple PRs  from your fork. To do so, you can read this  article  that  will also explain branches for you. Don't worry too much about the technical  details, the most important thing is to make and switch to a branch from HEAD. Commit format [!INFO ] Our dev shell allows for interactive commits, through the means of  commitizen . If this is  preferred, you can run   to be prompted to build your commit. For consistency, we do enforce a strict (but simple) commit style, that will be  linted against. The format is as follows (sections between   are optional): <top_level_scope>: the main scope of your commit. If making a change to a  program, this would be  ). For changes unrelated to the modules API,  we tend to use semantic scopes such as   for CI/repo related changes. [ <specific_scope> ]: An optional, more specific scope for your module. If  making changes to a specific program, this would be  . <message>: A free form commit message. Needs to be imperative and without  punctuation (e.g.   instead of  ). [ <body> ]: A free form commit body. Having one is encouraged when your  changes are difficult to explain, unless you're writing in-depth code comments  (it is still preferred however). You can now make your changes in your editor of choice. After committing your  changes, you can run: and then open up a PR, or \"Pull Request,\" in the upstream HJR repository. Again,  GitHub has good documentation for  this . After you have setup a PR, it will be  reviewed  by maintainers  and changes may be requested. Make the changes requested and eventually it will  likely be accepted and merged into main. Core Principles In creating HJR, we had a few principles in mind for development: Minimize the number of options written; Include only the module collection - leave functionality to Hjem; and Maintain readability of code, even for new users. Please keep these in mind as you read through our general guidelines for  contributing. Guidelines These guidelines, are, of course, merely guidelines. There are and will continue  to be exceptions. However, do your best to stick to them, and keep in mind that  reviewers will hold you to them as much as possible. Where to put a new module WIP Aliases At the top of any module, there should always be a   set. Within  this, functions should have their location aliased, cfg should be aliased, and  any generators should have an alias as well. Here's an example for a module that  makes use of the TOML generator used in nixpkgs: Notice that each function has its location aliased with an inherit to its target  location. Ideally, this location should be where one could find it in the source  code. For example, rather than using  , we use  ,  because mkIf is declared at   within the nixpkgs repo. Also notice that in this case,   includes both   and  , so the alias name is just  . Always be sure to include   that links to the point where options are  configured by the user. Writing Options [!IMPORTANT ] When writing options for any Nix module, do NOT make any option  depend on a value from  . Options should be pure, or it will interfere  with modules evaluation. Writing new options is the core of any new module. It is also the easiest place  to blunder. As stated above, a core principle of HJR is to minimize the number  of options as much as possible. As such, we have created a general template that  should help inform you of what options are needed and what are not: : Used to toggle install and configuration of package(s). : Used to customize and override the package installed. As needed,  : List of packages used in a module. : Primary configuration option, takes Nix code and converts to  target lang. As needed, one extra option for each extra file, such as   for  theme.toml. As needed,  : Extra lines of strings passed directly to config  file for certain programs. For the most part, this should be sufficient. Overrides of packages should be  simply offered through a direct override in  . For example, ncmpcpp's  package has a   argument. Rather than creating an extra  option for this, the contributor should note this with   like  so: and the user could simply pass: The   of   and other conversion options should preferably be a   option exposed by the generator (for example, TOML has   and  ), or, if using a  custom generator, a   should be created in   (for example,  ). Otherwise, a simple   would suffice. As a rule of thumb, submodules should not be employed. Instead, there should  only be one option per file. For some files, such as spotify-player's  , you may be tempted to create multiple options for   and  , as Home Manager does. Please avoid this. In this case, we can have a  simple   option that the user can then include a list of keymaps and/or a  list of actions that get propagated accordingly: Also note that the option description includes a link to upstream info on  settings options. Conditional Config Always use a   before the config section. Example: As a general guideline,  do not write empty strings to files . Not only is  this poorly optimized, but it will cause issues if a user happens to be manually  using the Hjem tooling alongside HJR. Here are some examples of how you might  avoid this: Here all that is needed is a simple   with a condition of the   option not being left empty. In a case where you write to multiple files, you  can use  , like so: This essentially takes the attrset of   and  optionally  adds attributes  defining more files to be written to  if  the corresponding option has been set.  This is optimal because the first three files written to share an option due to  how GTK configuration works. One last case is in the Hyprland, where several checks and several options are  needed to compile into one file. Here is how it is done: An additional attrset of boolean aliases is set within a   set to  highlight the different checks done and to add qucik ways to reference each  check without excess and redudant code. First, the file is only written if any of the options to write to the file are  set.   is then used to compile each option's results in an  optimized and clean way. Extending Lib Rather than having functions scattered throughout the module collection, we  would rather keep our directories organized and purposeful. Therefore, all  custom functions should go into our extended lib, found at  . The most common functions that might be created are a   and   pair. The former should be prefixed with \"to\" to maintain style and describe  their function: conversion  to  other formats. For example,   is the function that converts to the format required for ncmpcpp settings. Likewise, types should be suffixed with \"Type\" to maintain style and describe  their function. For example,   describes the type used in   converted to hyprlang. When it comes to directory structure, you should be able to infer how we  organize our lib by both our folder structure itself as well as the names of  functions. For example,   is found in  . In cases where a file is a single function, always be  sure to make sure the name matches the file. If a program uses multiple functions of the same kind (e.g. two generators), you  can put them in one file, like is done in  . Additionally, please follow how lib is structured in nixpkgs. For example, the  custom function   is under   to signify that it  operates on an attrset, just like in nixpkgs. Docs WIP Tests WIP Reviewing a PR Even if you do not have write-access. You can always leave a review on someone  else's PR. Again, GitHub has great  documentation  on doing so. This is great practice for learning the guidelines as well as  learning exceptions to the rules. ","path":"contributing.html"},{"id":"1","title":"Hjem Rum","content":"Hjem Rum A module collection for managing your   with  Hjem . A brief explanation [!IMPORTANT ]  Hjem, the tooling Hjem Rum is built off of, is still unfinished. Use at your own risk, and beware of bugs, issues, and missing features. If you do not feel like being a beta tester, wait until Hjem is more finished. It is not yet ready to fully replace Home Manager in the average user's config, but if you truly want to, an option could be to use both in conjunction. Either way, as Hjem continues to be developed, Hjem Rum will be worked on as we build modules and functionality out to support average users. Based on the Hjem tooling, Hjem Rum (literally meaning \"home rooms\") is a collection of modules for various programs and services to simplify the use of Hjem for managing your   files. Hjem was initially created as an improved implementation of the   functionality that Home Manager provides. Its purpose was minimal. Hjem Rum's purpose is to create a module collection based on that tooling in order to recreate the functionality that Home Manager's large collection of modules provides, allowing you to simply install and config a program. Setup [!WARNING ]  Importing Hjem Rum as a NixOS Module is being deprecated in favor of a Hjem Module. While this should not change user-side functionality, it does mean you will need to change where you import Hjem Rum in your config, and how you do so. If you were previously using Hjem Rum with the soon-to-be deprecated NixOS Module (importing it into  ), please see below on how to update to the Hjem Module. For more information on why this was done, see  #30 . To start using Hjem Rum, you must first import the flake and its modules into your system(s): Be sure to first set the necessary settings for Hjem and import the Hjem module from the input: You can then configure any of the options defined in this flake in any nix module: Contributing Hjem Rum is always in need of contribution. Please see  CONTRIBUTING.md  for more information on how to contribute and our guidelines. Credits Credit goes to  @NotAShelf  and  @éclairevoyant  for creating Hjem. License All the code within this repository is protected under the GPLv3 license unless explicitly stated otherwise within a file. Please see  LICENSE  for more information. ","path":"index.html"},{"id":"2","title":"Option: rum.misc.gtk.bookmarks","content":"Bookmarks used by GTK file managers (ex. Nautilus).\nEach entry should have one of the following formats:\n- `[uri]`\n- `[uri] <display name>`\n","path":"options.html#option-rum-misc-gtk-bookmarks"},{"id":"3","title":"Option: rum.misc.gtk.css.gtk3","content":"CSS to be written to {file}`$HOME/.config/gtk-3.0/gtk.css`.\nYou can either use this as lines or you can reference\na CSS file from your theme's package (or both).\n","path":"options.html#option-rum-misc-gtk-css-gtk3"},{"id":"4","title":"Option: rum.misc.gtk.css.gtk4","content":"CSS to be written to {file}`$HOME/.config/gtk-4.0/gtk.css`.\nYou can either use this as lines or you can reference\na CSS file from your theme's package (or both).\n","path":"options.html#option-rum-misc-gtk-css-gtk4"},{"id":"5","title":"Option: rum.misc.gtk.enable","content":"Whether to enable GTK configuration.","path":"options.html#option-rum-misc-gtk-enable"},{"id":"6","title":"Option: rum.misc.gtk.packages","content":"The list of packages to be installed for gtk themes.\nThis list should consist of any packages that will be used\nby your GTK theme(s).\n","path":"options.html#option-rum-misc-gtk-packages"},{"id":"7","title":"Option: rum.misc.gtk.settings","content":"The settings that will be written to the various gtk files\nto configure the GTK theme. GTK documentation is perhaps\nnebulous, but the Arch Wiki entry and the [official GTK\ndocumentation](https://docs.gtk.org/gtk3/class.Settings.html)\nare decent places to start.\n\nPlease note that each option name will have \"gtk-\" prepended\nto it, so there is no need to include that on every single option.\n","path":"options.html#option-rum-misc-gtk-settings"},{"id":"8","title":"Option: rum.programs.alacritty.enable","content":"Whether to enable Alacritty.","path":"options.html#option-rum-programs-alacritty-enable"},{"id":"9","title":"Option: rum.programs.alacritty.package","content":"The alacritty package to use.","path":"options.html#option-rum-programs-alacritty-package"},{"id":"10","title":"Option: rum.programs.alacritty.settings","content":"The configuration converted into TOML and written to\n{file}`$HOME/.config/alacritty/alacritty.toml`.\nPlease reference [Alacritty's documentation](https://alacritty.org/config-alacritty.html)\nfor config options.\n","path":"options.html#option-rum-programs-alacritty-settings"},{"id":"11","title":"Option: rum.programs.bottom.enable","content":"Whether to enable bottom.","path":"options.html#option-rum-programs-bottom-enable"},{"id":"12","title":"Option: rum.programs.bottom.package","content":"The bottom package to use.","path":"options.html#option-rum-programs-bottom-package"},{"id":"13","title":"Option: rum.programs.bottom.settings","content":"The configuration converted into TOML and written to\n{file}`$HOME/.config/bottom/bottom.toml`.\n\nPlease reference https://bottom.pages.dev/stable/configuration/config-file/\nfor config options.\n","path":"options.html#option-rum-programs-bottom-settings"},{"id":"14","title":"Option: rum.programs.fish.abbrs","content":"A set of fish abbreviations, they will be set up with the `abbr --add` fish builtin.\n","path":"options.html#option-rum-programs-fish-abbrs"},{"id":"15","title":"Option: rum.programs.fish.config","content":"The main configuration for fish, written verbatim to `.config/fish/config.fish`.\n","path":"options.html#option-rum-programs-fish-config"},{"id":"16","title":"Option: rum.programs.fish.earlyConfigFiles","content":"Extra configuration files, they will all be written verbatim\nto `.config/fish/conf.d/<name>.fish`.\n\nThose files are run before `.config/fish/config.fish` as per the fish\n[documentation](https://fishshell.com/docs/current/language.html#configuration-files).\n","path":"options.html#option-rum-programs-fish-earlyConfigFiles"},{"id":"17","title":"Option: rum.programs.fish.enable","content":"Whether to enable fish.","path":"options.html#option-rum-programs-fish-enable"},{"id":"18","title":"Option: rum.programs.fish.functions","content":"A fish function which is being written to `.config/fish/functions/<name>.fish`.\n\nIf the input value is a string, its contents will be wrapped\ninside of a function declaration, like so:\n```fish\n    function <name>;\n        <function body>\n    end\n```\n\nOtherwise you are expected to handle that yourself.\n","path":"options.html#option-rum-programs-fish-functions"},{"id":"19","title":"Option: rum.programs.fish.package","content":"The fish package to use.","path":"options.html#option-rum-programs-fish-package"},{"id":"20","title":"Option: rum.programs.fish.plugins","content":"An attrset of plugins.\n\nIn the case where a plugin is a 'vendored' plugin, all we are doing is adding that\nplugin to `hjem.users.<name>.packages`. As fish automatically discovers those files.\n\nA vendored plugin is denoted by the existence of one of the following files in its derivation:\n- /share/fish/vendor_conf.d\n- /share/fish/vendor_completions.d\n- /share/fish/vendor_functions.d\n\nThis will be the case with plugins present in `pkgs.fishPlugins`.\n\nFor the remaining cases, a file will be created at `~/.config/fish/conf.d/rum-plugin-<name>.fish`.\nIt will attempt to handle or source a variety of expected files from the derivation. Those files are:\n\n- `/functions`: is added to `fish_function_path`\n- `/completions`: is added to `fish_complete_path`\n- `/conf.d/*`, `/key_bindings.fish`, `/init.fish`: sourced in this order\n\nIf a plugin seems to not work, verify that it contains one of the aformentioned files.\n","path":"options.html#option-rum-programs-fish-plugins"},{"id":"21","title":"Option: rum.programs.fish.prompt","content":"Your fish prompt, written to `.config/fish/functions/fish_prompt.fish`.\nIt follows the behaviour of `rum.programs.fish.functions`.\n","path":"options.html#option-rum-programs-fish-prompt"},{"id":"22","title":"Option: rum.programs.foot.enable","content":"Whether to enable foot.","path":"options.html#option-rum-programs-foot-enable"},{"id":"23","title":"Option: rum.programs.foot.package","content":"The foot package to use.","path":"options.html#option-rum-programs-foot-package"},{"id":"24","title":"Option: rum.programs.foot.settings","content":"Settings are written as an INI file to {file}`$HOME/.config/foot/foot.ini`.\n\nRefer to {manpage}`foot.ini(5)` or the [upstream template](https://github.com/aome510/spotify-player/blob/master/docs/config.md#themes)\nfor all available options.\n","path":"options.html#option-rum-programs-foot-settings"},{"id":"25","title":"Option: rum.programs.fuzzel.enable","content":"Whether to enable fuzzel.","path":"options.html#option-rum-programs-fuzzel-enable"},{"id":"26","title":"Option: rum.programs.fuzzel.package","content":"The fuzzel package to use.","path":"options.html#option-rum-programs-fuzzel-package"},{"id":"27","title":"Option: rum.programs.fuzzel.settings","content":"Is written to {file}`$HOME/fuzzel/fuzzel.ini`.\n\nPlease reference {manpage}`fuzzel.ini(5)` for configuration options.\n","path":"options.html#option-rum-programs-fuzzel-settings"},{"id":"28","title":"Option: rum.programs.gammastep.enable","content":"Whether to enable gammastep.","path":"options.html#option-rum-programs-gammastep-enable"},{"id":"29","title":"Option: rum.programs.gammastep.package","content":"The gammastep package to use.","path":"options.html#option-rum-programs-gammastep-package"},{"id":"30","title":"Option: rum.programs.gammastep.settings","content":"Settings are written as an INI file to {file}`$HOME/.config/gammastep/config.ini`.\n\nRefer to https://gitlab.com/chinstrap/gammastep/-/blob/master/gammastep.conf.sample for\nall available options.\n","path":"options.html#option-rum-programs-gammastep-settings"},{"id":"31","title":"Option: rum.programs.ghostty.enable","content":"Whether to enable Ghostty.","path":"options.html#option-rum-programs-ghostty-enable"},{"id":"32","title":"Option: rum.programs.ghostty.package","content":"The ghostty package to use. You can use an override to configure some settings baked into the package.\n\n```nix\npackage = pkgs.ghostty.override {\n  withAdwaita = true;\n};\n```\n","path":"options.html#option-rum-programs-ghostty-package"},{"id":"33","title":"Option: rum.programs.ghostty.settings","content":"The configuration converted to INI and written to {file}`$HOME/.config/ghostty/config`.\nPlease consult [Ghostty's option reference](https://ghostty.org/docs/config/reference)\nfor configuration options.\n","path":"options.html#option-rum-programs-ghostty-settings"},{"id":"34","title":"Option: rum.programs.ghostty.themes","content":"An attribute set of themes, with the key as the theme name.\nPlease reference [Ghostty's color theme documentation](https://ghostty.org/docs/features/theme)\nfor configuration options.\n","path":"options.html#option-rum-programs-ghostty-themes"},{"id":"35","title":"Option: rum.programs.git.destination","content":"Select your preferred git config location. Do note that options set in\n{file}`$HOME/.gitconfig` will shadow anything set in `.config/git/config`.\n","path":"options.html#option-rum-programs-git-destination"},{"id":"36","title":"Option: rum.programs.git.enable","content":"Whether to enable git.","path":"options.html#option-rum-programs-git-enable"},{"id":"37","title":"Option: rum.programs.git.package","content":"The git package to use.","path":"options.html#option-rum-programs-git-package"},{"id":"38","title":"Option: rum.programs.git.settings","content":"Settings that will be written to your configuration file.\n","path":"options.html#option-rum-programs-git-settings"},{"id":"39","title":"Option: rum.programs.helix.enable","content":"Whether to enable Helix.","path":"options.html#option-rum-programs-helix-enable"},{"id":"40","title":"Option: rum.programs.helix.languages","content":"The languages configurations converted into TOML and written to\n{file}`$HOME/.config/helix/languages.toml`.\nPlease reference [Helix's language documentation](https://docs.helix-editor.com/languages.html)\nfor config options.\n","path":"options.html#option-rum-programs-helix-languages"},{"id":"41","title":"Option: rum.programs.helix.package","content":"The helix package to use.","path":"options.html#option-rum-programs-helix-package"},{"id":"42","title":"Option: rum.programs.helix.settings","content":"The editor configuration converted into TOML and written to\n{file}`$HOME/.config/helix/config.toml`.\nPlease reference [Helix's documentation](https://docs.helix-editor.com/editor.html)\nfor config options.\n","path":"options.html#option-rum-programs-helix-settings"},{"id":"43","title":"Option: rum.programs.helix.themes","content":"The custom themes converted into TOML and written to\n{file}`$HOME/.config/helix/themes/`.\nPlease reference [Helix's theming documentation](https://docs.helix-editor.com/themes.html)\nfor config options.\n","path":"options.html#option-rum-programs-helix-themes"},{"id":"44","title":"Option: rum.programs.hypridle.enable","content":"Whether to enable hypridle.","path":"options.html#option-rum-programs-hypridle-enable"},{"id":"45","title":"Option: rum.programs.hypridle.package","content":"The hypridle package to use.","path":"options.html#option-rum-programs-hypridle-package"},{"id":"46","title":"Option: rum.programs.hypridle.settings","content":"Is written to {file}`$HOME/hypr/hypridle.conf`.\n\nConfiguration options can be found on the [Hyprland Wiki](https://wiki.hyprland.org/Hypr-Ecosystem/hypridle).\n","path":"options.html#option-rum-programs-hypridle-settings"},{"id":"47","title":"Option: rum.programs.hyprland.enable","content":"Whether to enable Hyprland.","path":"options.html#option-rum-programs-hyprland-enable"},{"id":"48","title":"Option: rum.programs.hyprland.extraConfig","content":"Extra configuration that will be appended verbatim at the end of your `hyprland.conf`.\n","path":"options.html#option-rum-programs-hyprland-extraConfig"},{"id":"49","title":"Option: rum.programs.hyprland.importantPrefixes","content":"List of prefix of attributes to source at the top of the config.\n","path":"options.html#option-rum-programs-hyprland-importantPrefixes"},{"id":"50","title":"Option: rum.programs.hyprland.plugins","content":"List of Hyprland plugins to use. Can either be packages or\nabsolute plugin paths.\n","path":"options.html#option-rum-programs-hyprland-plugins"},{"id":"51","title":"Option: rum.programs.hyprland.settings","content":"Hyprland configuration written in Nix. Entries with the same key\nshould be written as lists. Variables' and colors' names should be\nquoted. See [Hyprland's documentation](https://wiki.hyprland.org)\nfor more examples.\n","path":"options.html#option-rum-programs-hyprland-settings"},{"id":"52","title":"Option: rum.programs.hyprlock.enable","content":"Whether to enable hyprlock.","path":"options.html#option-rum-programs-hyprlock-enable"},{"id":"53","title":"Option: rum.programs.hyprlock.package","content":"The hyprlock package to use.","path":"options.html#option-rum-programs-hyprlock-package"},{"id":"54","title":"Option: rum.programs.hyprlock.settings","content":"Is written to {file}`$HOME/hypr/hyprlock.conf`.\n\nConfiguration options can be found on the [Hyprland Wiki](https://wiki.hyprland.org/Hypr-Ecosystem/hyprlock).\n","path":"options.html#option-rum-programs-hyprlock-settings"},{"id":"55","title":"Option: rum.programs.keepassxc.enable","content":"Whether to enable KeePassXC.","path":"options.html#option-rum-programs-keepassxc-enable"},{"id":"56","title":"Option: rum.programs.keepassxc.package","content":"The keepassxc package to use.","path":"options.html#option-rum-programs-keepassxc-package"},{"id":"57","title":"Option: rum.programs.keepassxc.settings","content":"Settings are written as an INI file to {file}`$HOME/.config/keepassxc/keepassxc.ini`. Please reference\n[KeePassXC's User Guide](https://keepassxc.org/docs/KeePassXC_UserGuide).\n\nIt also can be configured by toggling options through the GUI, but this does not seem documented.\n","path":"options.html#option-rum-programs-keepassxc-settings"},{"id":"58","title":"Option: rum.programs.lsd.colors","content":"Configuration written to {file}`$HOME/.config/lsd/colors.yaml`, defining the colors used by lsd.\nPlease reference [lsd's color theme example](https://github.com/lsd-rs/lsd#color-theme-file-content)\nto configure it accordingly.\n","path":"options.html#option-rum-programs-lsd-colors"},{"id":"59","title":"Option: rum.programs.lsd.enable","content":"Whether to enable LSD (LSDeluxe).","path":"options.html#option-rum-programs-lsd-enable"},{"id":"60","title":"Option: rum.programs.lsd.icons","content":"Configuration written to {file}`$HOME/.config/lsd/icons.yaml`, defining the icons used by lsd.\nPlease reference [lsd's icon theme example](https://github.com/lsd-rs/lsd#icon-theme)\nto configure it accordingly.\n","path":"options.html#option-rum-programs-lsd-icons"},{"id":"61","title":"Option: rum.programs.lsd.package","content":"The lsd package to use.","path":"options.html#option-rum-programs-lsd-package"},{"id":"62","title":"Option: rum.programs.lsd.settings","content":"Configuration written to {file}`$HOME/.config/lsd/config.yaml`, defining lsd settings.\nPlease reference  [lsd's example configuration](https://github.com/lsd-rs/lsd#config-file-content)\nto configure it accordingly.\n","path":"options.html#option-rum-programs-lsd-settings"},{"id":"63","title":"Option: rum.programs.ncmpcpp.bindings","content":"Custom bindings configuration written to {file}`$HOME/.config/ncmpcpp/bindings`.\nPlease reference ncmpcpp(1) (ncmpcpp's man page) to configure it accordingly, or consult\n[ncmpcpp's example bindings file](https://github.com/ncmpcpp/ncmpcpp/blob/master/doc/bindings).\n\n\nThe lists are separated between keys, for actions ran on keypresses, and commands, for actions ran\non commands. The option's example demonstrates this greatly.\n","path":"options.html#option-rum-programs-ncmpcpp-bindings"},{"id":"64","title":"Option: rum.programs.ncmpcpp.bindings.<name>.*.actions","content":"The actions to be ran on either the key's or command's activation.\n","path":"options.html#option-rum-programs-ncmpcpp-bindings-<name>-*-actions"},{"id":"65","title":"Option: rum.programs.ncmpcpp.bindings.<name>.*.binding","content":"The key or command for which the set of actions is binded to.\n","path":"options.html#option-rum-programs-ncmpcpp-bindings-<name>-*-binding"},{"id":"66","title":"Option: rum.programs.ncmpcpp.bindings.<name>.*.deferred","content":"Whether the binding or command should be deferred (true) or immediate (false).\n","path":"options.html#option-rum-programs-ncmpcpp-bindings-<name>-*-deferred"},{"id":"67","title":"Option: rum.programs.ncmpcpp.enable","content":"Whether to enable ncmpcpp, a mpd-based music player..","path":"options.html#option-rum-programs-ncmpcpp-enable"},{"id":"68","title":"Option: rum.programs.ncmpcpp.package","content":"The ncmpcpp package to use. You can override the package to customize certain settings that are baked into the package.\n\n```nix\npackage = pkgs.ncmpccpp.override {\n  # useful overrides in the package\n  outputsSupport = true; # outputs screen\n  visualizerSupport = false; # visualizer screen\n  clockSupport = true; # clock screen\n  taglibSupport = true; # tag editor\n};\n```\n","path":"options.html#option-rum-programs-ncmpcpp-package"},{"id":"69","title":"Option: rum.programs.ncmpcpp.settings","content":"Configuration written to {file}`$HOME/.config/ncmpcpp/config`.\nPlease reference {manpage}`ncmpcpp(1)` to configure it accordingly, or consult [ncmpcpp's example configuration](https://github.com/ncmpcpp/ncmpcpp/blob/master/doc/config).\n","path":"options.html#option-rum-programs-ncmpcpp-settings"},{"id":"70","title":"Option: rum.programs.obs-studio.enable","content":"Whether to enable OBS Studio.","path":"options.html#option-rum-programs-obs-studio-enable"},{"id":"71","title":"Option: rum.programs.obs-studio.package","content":"The obs-studio package to use. You can override the package to install plugins.\n\n```nix\n# OBS has a special \"package\" to wrap the obs-studio package with plugins\npackage = pkgs.wrapOBS.override {\n  # These plugins will get installed and wrapped into obs-studio for use\n  plugins = with pkgs.obs-studio-plugins; [\n    wlrobs\n    waveform\n    obs-websocket\n  ];\n};\n```\n","path":"options.html#option-rum-programs-obs-studio-package"},{"id":"72","title":"Option: rum.programs.spotify-player.enable","content":"Whether to enable spotify_player.","path":"options.html#option-rum-programs-spotify-player-enable"},{"id":"73","title":"Option: rum.programs.spotify-player.keymap","content":"Sets of keymaps and actions converted into TOML and written to\n{file}`$HOME/.config/spotify-player/keymap.toml`.\nSee example for how to format declarations.\n\nPlease reference [spotify_player's keymaps documentation](https://github.com/aome510/spotify-player/blob/master/docs/config.md#keymaps)\nfor more information.\n","path":"options.html#option-rum-programs-spotify-player-keymap"},{"id":"74","title":"Option: rum.programs.spotify-player.package","content":"The spotify-player package to use. You can use an override to configure certain settings\nbaked into the package.\n\n```nix\npackage = pkgs.spotify-player.override {\n  # Useful overrides in the package\n  withStreaming = true;\n  withDaemon = true;\n  withAudioBackend = \"rodio\"; # alsa, pulseaudio, rodio, portaudio, jackaudio, rodiojack, sdl\n  withMediaControl = true;\n  withImage = true;\n  withNotify = true;\n  withSixel = true;\n  withFuzzy = true;\n};\n```\n","path":"options.html#option-rum-programs-spotify-player-package"},{"id":"75","title":"Option: rum.programs.spotify-player.settings","content":"The configuration converted into TOML and written to\n{file}`$HOME/.config/spotify-player/app.toml`.\n\nPlease reference [spotify_player's configuration documentation](https://github.com/aome510/spotify-player/blob/master/docs/config.md#general)\nfor configuration options.\n","path":"options.html#option-rum-programs-spotify-player-settings"},{"id":"76","title":"Option: rum.programs.spotify-player.themes","content":"The theme converted into TOML and written to\n{file}`$HOME/.config/spotify-player/themes.toml`.\n\nPlease reference [spotify_player's theme documentation](https://github.com/aome510/spotify-player/blob/master/docs/config.md#themes)\nfor configuration options.\n","path":"options.html#option-rum-programs-spotify-player-themes"},{"id":"77","title":"Option: rum.programs.starship.enable","content":"Whether to enable starship module..","path":"options.html#option-rum-programs-starship-enable"},{"id":"78","title":"Option: rum.programs.starship.integrations.zsh.enable","content":"Whether to enable starship integration with zsh.\n","path":"options.html#option-rum-programs-starship-integrations-zsh-enable"},{"id":"79","title":"Option: rum.programs.starship.package","content":"The starship package to use.","path":"options.html#option-rum-programs-starship-package"},{"id":"80","title":"Option: rum.programs.starship.settings","content":"The configuration converted to TOML and written to {file}`$HOME/.config/starship.toml`.\nPlease reference [Starship's documentation](https://starship.rs/config)\nfor configuration options.\n","path":"options.html#option-rum-programs-starship-settings"},{"id":"81","title":"Option: rum.programs.tofi.enable","content":"Whether to enable tofi.","path":"options.html#option-rum-programs-tofi-enable"},{"id":"82","title":"Option: rum.programs.tofi.package","content":"The tofi package to use.","path":"options.html#option-rum-programs-tofi-package"},{"id":"83","title":"Option: rum.programs.tofi.settings","content":"The configuration converted into \"key = value\" and written to\n{file}`$HOME/.config/tofi/config`.\nPlease reference {manpage}`tofi(5)`,\nor see an example at [tofi's default configuration](https://github.com/philj56/tofi/blob/master/doc/config).\n","path":"options.html#option-rum-programs-tofi-settings"},{"id":"84","title":"Option: rum.programs.vscode.enable","content":"Whether to enable Visual Studio Code.","path":"options.html#option-rum-programs-vscode-enable"},{"id":"85","title":"Option: rum.programs.vscode.package","content":"The vscode package to use.","path":"options.html#option-rum-programs-vscode-package"},{"id":"86","title":"Option: rum.programs.vscode.settings","content":"The configuration converted into JSON and written to\n{file}`$HOME/.config/Code/User/settings.json`.\n\nPlease reference [Visual Studio Code's official documentation](https://code.visualstudio.com/docs/getstarted/settings#_settings-json-file)\nfor more information.\n","path":"options.html#option-rum-programs-vscode-settings"},{"id":"87","title":"Option: rum.programs.zsh.enable","content":"Whether to enable zsh module..","path":"options.html#option-rum-programs-zsh-enable"},{"id":"88","title":"Option: rum.programs.zsh.initConfig","content":"Commands that will be added verbatim to {file}`.zshrc`.;\n","path":"options.html#option-rum-programs-zsh-initConfig"},{"id":"89","title":"Option: rum.programs.zsh.loginConfig","content":"Commands that will be added verbatim to {file}`.zlogin`.;\n","path":"options.html#option-rum-programs-zsh-loginConfig"},{"id":"90","title":"Option: rum.programs.zsh.logoutConfig","content":"Commands that will be added verbatim to {file}`.zlogout`.;\n","path":"options.html#option-rum-programs-zsh-logoutConfig"},{"id":"91","title":"Option: rum.programs.zsh.package","content":"The zsh package to use.","path":"options.html#option-rum-programs-zsh-package"},{"id":"92","title":"Option: rum.programs.zsh.plugins","content":"An attrset of plugins to load into zsh. Configuration of the former can be done and is advised to be\ndone at this level, for the sake of organization.\n","path":"options.html#option-rum-programs-zsh-plugins"},{"id":"93","title":"Option: rum.programs.zsh.plugins.<name>.completions","content":"A list of completions that will be loaded into `fpath`.\n","path":"options.html#option-rum-programs-zsh-plugins-<name>-completions"},{"id":"94","title":"Option: rum.programs.zsh.plugins.<name>.config","content":"Commands that will be added verbatim to {file}`.zshrc` right after the plugin import..;\n","path":"options.html#option-rum-programs-zsh-plugins-<name>-config"},{"id":"95","title":"Option: rum.programs.zsh.plugins.<name>.source","content":"Path to the plugin file to load.","path":"options.html#option-rum-programs-zsh-plugins-<name>-source"}]